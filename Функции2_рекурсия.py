# В функцию можно добавлять дефолтные значения
def map(a, b, c = 8): # ВОТ ТАК
    return a + b + c 
# Дефолтное значение необходимо устанавливать в конце!
map (3, 4, 10) # если указать 3 значения, то последнее поменяет дефолтное!

# Рекурсия
def tmp(x): # функция будет запускаться бесконечно!
 #  if x < 0:
#       return # остановка функции, когда значение Х стало меньше 0
    print(x)
    tmp(x - 1) # без остановки появится стоп рекурсии с ошибкой
# если вызов функции и вывод Х поменять местами, значения будут выводиться в обратном порядке!  
# всё что написано после рекурсии будет выводиться в обратном порядке! (с конечной функции)
n = int(input())

# ПРИМЕР СЛОЖНЕЕ
# поледовательность Фибоначи

def fib(n): # запуская функцию от какого-то числа, мы задаём порядковый номер последовательности Фибоначи
    if n < 0: # на 6 позиции будет число 8, такое значение получится, если указать n = 6
        return 0
    elif n == 0:
        return 0 
    elif n == 1:
        return 1
    res = fib(n - 1) + fib(n - 2) # каждое последующее число равно сумме двух предыдущих
    return(res)

# максимальная глубина рекурсии:
# меньше тысячи < Как её УВЕЛИЧИТЬ???
import sys # запускаем библиотеку системных вызовов
sys.setrecursionlimit(5000) # устанавливаем максимальную глубину рекурсии - 5000
