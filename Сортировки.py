a = [4, 9, 0, 17, 23, 4, 1, 0]
a[0], a[2] = a[2], a[0] # меняем значения списка!
n = len(a) # переменная n равна длине списка 
# сортировка пузырьком
for i in range(n): # для каждого элемента в списке
    for j in range(n - 1 - i): # для каждого элемента в списке -1
        if a[j] > a[j + 1]: # если последующий элемент меньше
            a[j], a[j + 1] = a[j + 1], a[j]  # меняем их местами
# вывод будет 0 0 1 4 4 9 17 23

print(*a)

# тоже самое будет, если сделать
a.sort()

c1 = 3
c2 = 4
# переприсваивание значений элиементов!
c1, c2 = c2, c1
print(c2, c1)

# отсоритруем по остатку деления на 10
a = [4, 9, 0, 17, 23, 4, 1, 0]

def cmp(x): # пишем функцию, котора берет число, и выполняет его деление
    return x % 10

a.sort(ket=cmp) #вставляем функцию в key сортировки
# так каждый элемент будет делиться с остатком на 10
# и уже потом, пойдёт сортировка остатков! ;)
# вывод будет [0, 0, 1, 23, 4, 4, 17, 9]

# ЗАДАЧКА
n = 5 # пять сотруднико
sph = [12, 30 , 97, 5, 6] # зп сотрудника в час
hs = [10, 120, 4, 8, 9] # сколько часов проработал

res = [] # создаём пустой список
for i in range(n): # проходимся по всем сотрудникам
    r = sph(i) * hs[i] # сколько сотрудник получил всего денег!
    res.append(r) # наполняем список
res.sort() # сортируем от самой маленькой зп, всё СУПЕР!

# ЕЩЁ ЗАДАЧКА
tmp = [12, 34, 35, 12, 68, 29] # сортируем по произведению первого и второго числа в элементе

def kmp(x):
    return (x // 10) * (x % 10)
# первую цифру получаем целочисленным делением на 10
# вторую цифру получаем остаточным делением на 10
tmp.sort(key=kmp)
# вывод будет [12, 12, 34, 35, 29, 68]

a = 5
b = 8
c = 1
d = -19

print(max(a, b, c, d)) # выводим максимум из представленных переменных
print(min(a, b, c, d)) # аналогично минимум!

tmp = [1, 4, -19, 30, 56]
print(max(tmp)) # всё тоже самое! 1 число

# КОРТЕЖИ!
# неизменяемые списки
a = (2, 4, 9, 7) # в круглых скобках
a = tuple() # задание пустого кортежа!
# к кортежу применимо:
# len, count, всё, что его не меняет!
# кортежи нужны, чтоб сохранять элементы, которые мы не хотим случайно изменить!
a = [(21, 123, 141), (123, 231, 154)] # в скобке обозначены кортежи, хрен изменишь!
# однако можно изменить сам кортеж! 
a[0] = (21, 124, 155) # меняется сам кортеж! ааааааа!!

